<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs on Hive Site</title><link>https://hive.qubitpi.org/docs/</link><description>Recent content in Docs on Hive Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 12 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://hive.qubitpi.org/docs/index.xml" rel="self" type="application/rss+xml"/><item><title>Javadocs</title><link>https://hive.qubitpi.org/docs/javadocs/</link><pubDate>Mon, 29 Aug 2022 04:01:38 +0530</pubDate><guid>https://hive.qubitpi.org/docs/javadocs/</guid><description>Recent versions: javadoc and sources jars for use in an IDE are also available via Nexus Hive 4.0.1 Javadocs Hive 4.0.0 Javadocs Hive 4.0.0-beta-1 Javadocs Hive 4.0.0-alpha-2 Javadocs Hive 3.1.3 Javadocs Hive 4.0.0-alpha-1 Javadocs Hive 3.1.2 Javadocs Hive 3.0.0 Javadocs Hive 2.3.9 Javadocs Hive 2.2.0 Javadocs Hive 2.1.1 Javadocs Hive 1.2.2 Javadocs</description></item><item><title>Business Intelligence (BI) / Analytics</title><link>https://hive.qubitpi.org/docs/bi/</link><pubDate>Thu, 17 Sep 2020 04:01:38 +0530</pubDate><guid>https://hive.qubitpi.org/docs/bi/</guid><description>Overview You can use business intelligence (BI) and data analytics tools such as Tableau and MicroStrategy with data on Hadoop. These tools access grid data with Hive through the Hortonworks Hive ODBC driver.
For those who are not familiar with Tableau and MicroStrategy, please read the next section that discusses the differences and strengths of each so you can use the tool that best meets your needs. If you know which tool is right for you, continue to :ref:Visualizing Data and Ad Hoc Reporting With Tableau &amp;lt;getting_started-tableau&amp;gt; or :ref:Standard Reporting With MicroStrategy &amp;lt;gs_bi-ms&amp;gt;.</description></item><item><title>Hive Best Practices</title><link>https://hive.qubitpi.org/docs/best-practices/</link><pubDate>Wed, 16 Sep 2020 04:01:38 +0530</pubDate><guid>https://hive.qubitpi.org/docs/best-practices/</guid><description>Data Producers Always create tables in a database.
When getting raw data from an initial loading or output of a MapReduce job, create an external table for staging that can be used to load an optimized table.
Don&amp;rsquo;t place data for external tables in the database directory.
Carefully choose the format for storming.
Text – slow to read and write, compressed files cannot be split, may lead to huge maps.</description></item><item><title>Hive Data Formats</title><link>https://hive.qubitpi.org/docs/data-formats/</link><pubDate>Tue, 15 Sep 2020 04:01:38 +0530</pubDate><guid>https://hive.qubitpi.org/docs/data-formats/</guid><description>Supported File Formats The following are the some file formats supported:
Delimited text Row Columnar file (RCFile) Optimized Row Columnar (ORC) file (Hive 0.11 and beyond) Avro IDL (end of Q2'14) Hive also allows mixed formats:
Ingest data in write optimized format such as delimited text Run a batch (nightly) job to convert to read-optimized ORCFile Supported Compression Formats The compression format is defined in io.compression.codecs.</description></item><item><title>Programming Hive</title><link>https://hive.qubitpi.org/docs/programming/</link><pubDate>Mon, 14 Sep 2020 04:01:38 +0530</pubDate><guid>https://hive.qubitpi.org/docs/programming/</guid><description>Overview This chapter is compiled from the Hive documentation from Hortonworks, Cloudera, and the book Programming Hive
Hive CLI ⚠️ Deprecation in favor of Beeline CLI. HiveServer2 (introduced in Hive 0.11) has its own CLI called Beeline, which is a JDBC client based on SQLLine. Due to new development being focused on HiveServer2, Hive CLI will soon be deprecated in favor of Beeline.
Start Beeline beeline -u &amp;lt;database URL&amp;gt; -n &amp;lt;username&amp;gt; -p &amp;lt;password&amp;gt; Print Configs Overridden by User or Hive.</description></item><item><title>Hive Concepts</title><link>https://hive.qubitpi.org/docs/concepts/</link><pubDate>Sun, 13 Sep 2020 04:01:38 +0530</pubDate><guid>https://hive.qubitpi.org/docs/concepts/</guid><description>Hive Data Model Data in Hive is organized into:
Tables - These are analogous to Tables in Relational Databases. Tables can be filtered, projected, joined and unioned. Additionally all the data of a table is stored in a directory in HDFS. Hive also supports the notion of external tables wherein a table can be created on prexisting files or directories in HDFS by providing the appropriate location to the table creation DDL.</description></item><item><title>Hive Intro</title><link>https://hive.qubitpi.org/docs/intro/</link><pubDate>Thu, 10 Sep 2020 04:01:38 +0530</pubDate><guid>https://hive.qubitpi.org/docs/intro/</guid><description>What is Hive? Apache Hive is an application that abstracts Hadoop data so that it can be accessed using an SQL-like language called HiveQL. Using HiveQL, you can use a familiar procedural language to query large amounts of data on the grid as if you were working with a relational database.
Hive offers a broad range of SQL semantics and integrates with both ODBC and JDBC interfaces, making it ideal for analyzing data.</description></item></channel></rss>